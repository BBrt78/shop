import './App.css';
import React, {useState} from 'react'
import Header from './header'
import Meme from './meme'



const thingsArray = ['thing1', 'thing2']

function AddItem() {
   const newThingText = `Thing ${thingsArray.length + 1}`
   thingsArray.push(newThingText)
   console.log(thingsArray)
}

function App() {
   const res = useState()
   console.log(res)
   let things = thingsArray.map((element) => <p key={element}>{element}</p>)

   return (
      <div>
         <button onClick={AddItem}>add item</button>
         {things}
      </div>
   )
}
export default App;

======MEME APP========

// return (
//    <div className='container'>
//       <Header />
//       <Meme />
//    </div>
// )
=====================

zrobione zad z add thing

function App() {
  const [items, setItems] = React.useState(['thing1'])

  function AddItem() {
      setItems(prevItems => [...items, `thing${items.length + 1}`]
      )
   }

   let things = items.map(item => <h1 key={item}>{item}</h1>)
   return (
      <div>
         <button onClick={AddItem}>add item</button><br></br>
         {things}
      </div>
  )
}
export default App;

-----------------------------------------------------------
zad2 karta

import './App.css';
import React from 'react'
import cat from './img/cat.jpg'
import starWhite from './img/starWhite.jpg'
import starGold from './img/starGold.jpg'

function App() {
   const [contact, setContact] = React.useState({
      firstName: 'John',
      lastName: 'Doe',
      phone: '123-321',
      email: 'email@com.com',
      isFavorite: false
   })

   //const starIcon = contact.isFavorite ? starGold : starWhite;

   function toggleFavorite() {

      setContact(prevContact => {
         return {...prevContact, isFavorite: !prevContact.isFavorite}
      })
   }

   function Star(props) {

      const starIcon = props.isFilled ? starGold : starWhite
      
      return (
         <img src={starIcon} className='star' onClick={props.handleClick} />
      )
   }

   return (
      <main>
         <article className='card'>
            <img src={cat} className='card-image' />
            <div className='card-info'>
               <Star isFilled={contact.isFavorite} handleClick={toggleFavorite} />
               <h2 className='card-name'>{contact.firstName} {contact.lastName}</h2>
               <p className='card-contact'>{contact.phone}</p>
               <p className='card-contact'>{contact.email}</p>
            </div>
         </article>
      </main>
   )


}
export default App;

--------------------------------------------------

meme

import React from 'react'
import cat from './img/cat.jpg'
import dataM from './memeData'

function Meme() {
    
    const [memeImage, setMemeImage] = React.useState(cat)

    const [meme, setMeme] = React.useState({
        topText: '', 
        bottomText: '', 
        randomImage: memeImage})
        
    const [allMemeImages, setAllMemeImages] = React.useState(dataM)
        
    function getMemeImage() {
            const memesArray = allMemeImages.data.memes
            const random = Math.floor(Math.random() * memesArray.length)
            const url = memesArray[random].img
            setMeme(prevMeme => ({...prevMeme, randomImage: url}))
        }
    
    function handleChange(event) {
        const {name, value} = event.target

            setMeme(prevMeme => ({
                ...prevMeme,
                 [name]: value
            }))
    }

    return(
        <div className='meme-container'>
            <div className='form'>
                <input 
                    type='text'
                    id='ftext'
                    placeholder='upper text'
                    name='ftext'
                    value={meme.topText}
                    onChange={handleChange}
                />

                <input 
                    type='text'
                    id='stext'
                    placeholder='bottom text'
                    name='ftext'
                    value={meme.bottomText}
                    onChange={handleChange}
                />
                
            </div>
            <h1 className='upperText'>{meme.topText}</h1>
            <h1 className='lowerText'>{meme.bottomText}</h1>
            <img id='cat' src={meme.randomImage} className='meme-img' />
            <button onClick={getMemeImage} type='button' className='button'>Get new image</button>
        </div>
        
    )
}

export default Meme

---------------------------------------

Meme header

import React from 'react'
import trollface from './img/trollface.jpg'

function Header() {
    return (
        <div className='header'>
            <img src={trollface} className='trollface'/>
            <h1 className='header-text'>Meme Generator</h1>
        </div>
    )
}
export default Header

========================

jokes

function App() {

   return (
      <div>
         <Joke 
            setup='joke setup 1'
            punchline='joke punchline 1'
         />
          <Joke 
            setup='joke setup 2'
            punchline='joke punchline 2'
         />
      </div>
   )
}
export default App;

---------------------------------

joke

import React from 'react'

export default function Joke(props) {

    const [isShown, setIsShown] = React.useState(false)
    
    function toggle() {
            setIsShown(prevShown => !prevShown)
            
    }
    
return (
    <div>
        {props.setup && <h3>{props.setup}</h3>}
        {isShown && <p>{props.punchline}</p>}
        
        <hr />
        <button onClick={toggle}>toggle</button>
    </div>
)
}

------------------------------
FORM pierwsze cwicznie
- - - - - - - - - - - - - - - - - -

import React from 'react'

export default function Form() {

    const [formData, setFormData] = React.useState(
        {
        firstName: '', 
        lastName: '', 
        mail:'', 
        textarea:'', 
        isFriendly: true, 
        employment:'',
        favColor:''
    })

    function handleChange(event) {
        const {name, value, type, checked} = event.target
       setFormData(prevFormData => {
            return {...prevFormData,
                [name]: type === 'checkbox' ? checked : value
            }
       })
    }

    function handleSubmit(event) {
        event.preventDefault()
        console.log(formData)
    }

    return (
        <div>
            <form onSubmit={handleSubmit}>
                <input 
                    type='text'
                    placeholder='First Name'
                    onChange={handleChange}
                    name='firstName'
                    value={formData.firstName}
                />
                <input
                    type='text'
                    placeholder='Last Name'
                    onChange={handleChange}
                    name='lastName'
                    value={formData.lastName}
                />
                <input
                    type='mail'
                    placeholder='mail'
                    onChange={handleChange}
                    name='mail'
                    value={formData.mail}
                />
                <textarea
                    value={formData.textarea}
                    onChange={handleChange}
                    name='textarea'
                    placeholder='love'
                />
                <input
                    type='checkbox'
                    id='isFriendly'
                    checked={formData.isFriendly}
                    onChange={handleChange}
                    name='isFriendly'
                />
                <label htmlFor='isFriendly'>friend?</label>

                <br />
                <br />

                <fieldset>
                    <legend>current employment status</legend>

                    <input 
                        type='radio'
                        id='unemployed'
                        name='employment'
                        value='unemployed'
                        onChange={handleChange}
                        checked={formData.employment === 'unemployed'}
                    />
                    <label htmlFor='unemployed'>Unemployed</label>
                    <br />

                    <input
                        type='radio'
                        id='part-time'
                        name='employment'
                        value='part-time'
                        onChange={handleChange}
                        checked={formData.employment === 'part-time'}
                    />
                    <label htmlFor='part-time'>part-time</label>
                    <br />

                    <input
                        type='radio'
                        id='full-time'
                        name='employment'
                        value='full-time'
                        onChange={handleChange}
                        checked={formData.employment === 'full-time'}
                    />
                    <label htmlFor='full-time'>full-time</label>
                </fieldset>

                <br />

                <label htmlFor='favColor'>what's your favorite color</label>
                <br />
                <select 
                    id='favColor'
                    value={formData.favColor}
                    onChange={handleChange}
                    name='favColor'
                >
                    <option value=''>choose</option>
                    <option value='red'>red</option>
                    <option value='blue'>blue</option>
                    <option value='yellow'>yellow</option>
                </select>
                <br />
                <button>submit</button>
            </form>
        </div>
    )
}


------------------------------

form app

function handleSubmit(event) {
      event.preventDefault()
  } 

const [formData, setFormData] = React.useState(
      {email:'', password:'', confirmPassword:'', checkboxSign: true} //name takie same
   )

   function handleChange(event) {
      const {name, value, type, checked} = event.target
      console.log(name)
      
      setFormData(prevFormData => {
            return {...prevFormData,
            [name]: type === 'checkbox' ? checked : value}
      })
  }

  function handleClick() {
   formData.checkboxSign ? console.log('newsletter') : console.log('no news')
      
      return (formData.password === formData.confirmPassword ? console.log('pass') : console.log('dont pass'))
  }

   return (
      <div className='form-container'>
         <form className='form' onSubmit={handleSubmit}>

            <input
            type='email'
            placeholder='email'
            className='form-input'
            value={formData.email}
            onChange={handleChange}
            name='email'
            />

            <input
            type='password'
            placeholder='password'
            className='form-input'
            value={formData.password}
            onChange={handleChange}
            name='password'
            />

            <input
            type='password'
            placeholder='confirm password'
            className='form-input'
            value={formData.confirmPassword}
            onChange={handleChange}
            name='confirmPassword'
            />

            <input
            type='checkbox'
            id='check-id'
            onChange={handleChange}
            checked={formData.checkboxSign}
            name='checkboxSign'
            />

            <label htmlFor='checkbox'>checkbox text</label>

            <button onClick={handleClick}>Sign up</button>
         </form>
         
      </div>
   )